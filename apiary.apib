FORMAT: 1A

# fobless
Fobless api

## Users [/v1/users]
### Retrieve authenticated User [GET]
+ Response 200 (application/json)

        {
            "id": 69,
            "first_name": "John",
            "last_name": "Does",
            "email": "john.doe@gmail.com",
            "provider": "github",
            "provider_id": "577676",
            "updated_at": "2015-03-01T16:28:51+00:00",
            "created_at": "2015-03-01T16:28:51+00:00",
            "account": {
                "id": 74,
                "properties": [],
                "updated_at": "2015-03-01T16:28:51+00:00",
                "created_at": "2015-03-01T16:28:51+00:00"
            }
        }

### Create a User [POST]
+ Request (application/json)

        {
            "first_name": "John",
            "last_name": "Does",
            "email": "john.does@gmail.com",
            "password": "test_password"
        }

+ Response 201 (application/json)

        {
            "id": 70,
            "first_name": "John",
            "last_name": "Does",
            "email": "john.does@gmail.com",
            "provider": null,
            "provider_id": null,
            "updated_at": "2015-03-01T16:42:07+00:00",
            "created_at": "2015-03-01T16:42:07+00:00",
            "account": {
                "id": 75,
                "properties": [],
                "updated_at": "2015-03-01T16:42:07+00:00",
                "created_at": "2015-03-01T16:42:07+00:00"
            }
        }

### Update authenticated User [PATCH]
+ Request (application/json)

        {
            "first_name": "Jane",
            "last_name": "Does",
            "password": "new_test_password",
            "email": "john.does@gmail.com"
        }

+ Response 200 (application/json)

        {
            "id": 69,
            "first_name": "Jane",
            "last_name": "Does",
            "email": "john.does@gmail.com",
            "provider": "github",
            "provider_id": "577676",
            "updated_at": "2015-03-01T16:49:23+00:00",
            "created_at": "2015-03-01T16:28:51+00:00",
            "account": {
                "id": 74,
                "properties": [],
                "updated_at": "2015-03-01T16:28:51+00:00",
                "created_at": "2015-03-01T16:28:51+00:00"
            }
        }

### Delete authenticated user [DELETE]
+ Response 200 (application/json)

        {
            "id": 69,
            "first_name": "Jane",
            "last_name": "Does",
            "email": "john.does@gmail.com",
            "provider": "github",
            "provider_id": "577676",
            "updated_at": "2015-03-01T16:49:23+00:00",
            "created_at": "2015-03-01T16:28:51+00:00",
            "account": {
                "id": 74,
                "properties": [],
                "updated_at": "2015-03-01T16:28:51+00:00",
                "created_at": "2015-03-01T16:28:51+00:00"
            }
        }

## Authentication [/v1/auth/github]
### Authenticate with Github [GET]
+ Response 200 (application/json)

        {
          "id":70,
          "first_name":"John",
          "last_name":"Does",
          "email":"john.does@gmail.com",
          "provider":"github",
          "provider_id":"577676",
          "crypted_password":"5b274a7c291b665ad02e3c9cc9d7df3d8da3eb08b6ae690c96bee4fdecbb8",
          "account_id":75,
          "created_at":"2015-03-01 16:42:07 +0000",
          "updated_at":"2015-03-01 16:42:07 +0000"
        }

## Authentication [/v1/auth/password?email=&password=]
### Authenticate with email and password [GET]

+ Parameters

    + email (required, string, `john.does@gmail.com`) ... Email of user.
    + password (required, string, `test_password`) ... Password of user.

+ Response 200 (application/json)
        
        {
          "id":70,
          "first_name":"John",
          "last_name":"Does",
          "email":"john.does@gmail.com",
          "provider":"github",
          "provider_id":"577676",
          "updated_at":"2015-03-01T16:42:07+00:00",
          "created_at":"2015-03-01T16:42:07+00:00",
          "account":{
            "id":75,
            "properties":[],
            "updated_at":"2015-03-01T16:42:07+00:00",
            "created_at":"2015-03-01T16:42:07+00:00"
          }
        }

## Properties [/v1/properties]
### List Properties for Account for authenticated User [GET]

+ Response 200 (application/json)

        [
            {
                "created_at": "2015-03-01T17:57:29+00:00",
                "id": 55,
                "name": "test property",
                "updated_at": "2015-03-01T17:57:29+00:00",
                "units": []
            },
            {
                "created_at": "2015-03-01T17:58:20+00:00",
                "id": 56,
                "name": "test property 1",
                "updated_at": "2015-03-01T17:58:20+00:00",
                "units": []
            }
        ]

### Create Properties for Account for authenticated User [POST]

+ Request (application/json)
    
        { "name": "test property" }

+ Response 200 (application/json)

        {
            "created_at": "2015-03-01T18:00:20+00:00",
            "id": 57,
            "name": "test property",
            "updated_at": "2015-03-01T18:00:20+00:00",
            "units": []
        }

+ Request (application/json)
    
        {}

+ Response 400 (application/json)

        {
            "name": [
                "is not present"
            ]
        }